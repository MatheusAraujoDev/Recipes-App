{"version":3,"sources":["images/shareIcon.svg","loginbg.mp4","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","Pages/perfilbg.mp4","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","Pages/Login.js","Context/MyContext.js","Services/FetchApi.js","Components/Header.js","Context/useSearchbar.js","Components/Footer.js","Components/CardRecipes.js","Components/CategoryButtons.js","Pages/RecipesFoods.js","Pages/RecipesDrinks.js","Pages/Profile.js","Pages/RecipesDone.js","Pages/FavoriteRecipes.js","Pages/ExploreFoodOrigin.js","Pages/ExploreDrinksIngredients.js","Pages/ExploreFoodsIngredients.js","Services/MealOrDrink.js","Context/useExploreRecipes.js","Pages/ExploreDrinks.js","Pages/ExploreFoods.js","Pages/Explore.js","Components/ShareButton.js","Components/FavoriteButton.js","Services/checkInProgress.js","Components/RecomendedRecipes.js","Services/veriryrecipeisdone.js","Pages/DrinkDetails.js","Pages/ProcessFoods.js","Pages/ProcessDrinks.js","Pages/FoodDetails.js","Components/NotFound.js","Routes/Routes.js","App.js","serviceWorker.js","Context/MyProvider.js","index.js"],"names":["module","exports","Login","useState","email","setEmail","password","setPassword","disabled","setDisabled","useEffect","test","className","width","height","playsinline","autoPlay","muted","loop","src","loginbg","type","htmlFor","data-testid","placeholder","name","value","onChange","event","target","to","Button","onClick","localStorage","setItem","setUser","emailStringFly","JSON","stringify","variant","MyContext","createContext","globalFetch","URL","a","fetch","response","json","fetchIngredient","site","ingrediente","result","fetchName","nome","fetchFirstLetter","primeiraLetra","getDrink","getFood","fetchSurprise","Header","title","searchIconAppears","useContext","setRecipe","recipe","searchResult","setSearchResult","selectedSearch","setSelectedSearch","history","useHistory","pathname","location","food","getRecipe","length","alert","meals","drinks","getSearch","recipeResult","redirectByChoice","idFood","push","useSearchbar","searchInput","setSearchInput","profileIcon","alt","searchIcon","role","id","Footer","drinkIcon","exploreIcon","mealIcon","CardRecipes","index","thumb","CategoryButtons","setFood","setDrink","search","setSearch","category","setCategory","toggle","setToggle","fetchCategoryMeal","fetchCategoryDrink","categoryFilter","strCategory","console","log","categories","allCategories","map","key","e","toggleCategory","RecipesFoods","recp","idMeal","strMealThumb","strMeal","RecipesDrinks","drink","idDrink","strDrinkThumb","strDrink","Profile","userEmail","parse","getItem","perfilbg","clear","RecipesDone","recipesDone","doneRecipes","setDoneRecipes","copyText","setCopyText","doneRecipesFilter","filteredResult","filter","item","copyToClipboard","copy","setInterval","image","shareIcon","area","doneDate","item1","index1","tags","tagItem","tagIndex","showTag","alcoholicOrNot","FavoriteRecipes","ExploreFoodOrigin","areas","setAreas","foods","setFoods","AllURL","AllBtn","request","getFoodsByArea","areaRequest","strArea","ExploreDrinksIngredient","ExploreFoodIngredients","mealOrDrink","concat","routeName","useExploreRecipes","setId","idResponse","fetchDidMount","backToExplore","typeBack","redirectToSurpriseMe","ExploreDrinks","ExploreFood","Explore","redirectPageTo","ShareButton","idRecipe","isCopy","setIsCopy","path","navigator","clipboard","writeText","FavoriteBtn","isFavorite","setIsFavorite","recipeId","getLocalStr","checkLocalStr","Object","values","some","setButton","recipeDetails","storageFavorites","getRecipeId","myStructure","blackHeartIcon","whiteHeartIcon","checkInProgress","cocktails","RecomendedRecipes","origem","cards","setCards","busca","includes","resposta","renderCardRecipes","veriryrecipeisdone","match","params","propTypes","PropTypes","shape","string","isRequired","DrinkDetails","recipes","setRecipes","veriryrecipe","endPoint","results","getApi","ingredientsRecipe","arrayIndredientKids","keys","ingredients","forEach","ingredientsMesure","arrayIngredientKeys","ingredients2","essaPagina","FavoriteButton","strAlcoholic","newArray","concatIngredientWithMesure","igredient","strInstructions","style","display","inProgress","find","checkStart","ProcessFoods","numberOfChecked","setNumberOfChecked","document","getElementsByClassName","handleChange","checked","count","ProcessDrinks","FoodDetails","url","strYoutube","verifyrecipeisdone","NotFound","Routes","exact","component","render","props","ExploreFoods","ExploreFoodsIngridients","ExploreDrinksIngredients","App","Boolean","window","hostname","MyProvider","children","setInProgress","setIngredients","checkedIngredients","setCheckIngredients","allChecked","setAllChecked","recFood","setRecFood","recDrink","setRecDrink","favRecipe","favoriteRecipes","setFavRecipes","recomendations","setRecomendations","context","Provider","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0024816.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginbg.25d10105.mp4\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/perfilbg.de19275e.mp4\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport loginbg from '../loginbg.mp4';\nimport './Styles/Login.css';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    function LoginVerification() {\n      const validateEmail = /^[\\w.]+@[a-z]+\\.\\w{2,3}$/g;\n      const validatePass = /[\\S]{7,}/;\n      if (validateEmail.test(email) && validatePass.test(password)) {\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n      }\n    }\n    LoginVerification();\n  }, [email, password]);\n\n  function setToLocalStorage() {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    const setUser = { email };\n    const emailStringFly = JSON.stringify(setUser);\n    localStorage.setItem('user', emailStringFly);\n    // const initialObj = {\n    //   cocktails: {},\n    //   meals: {},\n    // };\n  }\n\n  return (\n    <div className=\"loginBox\">\n      <h2 className=\"title\">Cozinhando com Gosto</h2>\n      <video\n        width=\"360px\"\n        height=\"640px\"\n        playsinline\n        autoPlay\n        muted\n        loop\n        className=\"bgVideo\"\n      >\n        <source src={ loginbg } type=\"video/mp4\" />\n      </video>\n      <label htmlFor=\"email\">\n        <input\n          data-testid=\"email-input\"\n          type=\"text\"\n          placeholder=\"Digite seu email\"\n          name=\"email\"\n          value={ email }\n          onChange={ (event) => setEmail(event.target.value) }\n        />\n      </label>\n      <label htmlFor=\"password\">\n        <input\n          data-testid=\"password-input\"\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          name=\"password\"\n          value={ password }\n          onChange={ (event) => setPassword(event.target.value) }\n        />\n      </label>\n      <Link to=\"/comidas\">\n        <br />\n        <Button\n          data-testid=\"login-submit-btn\"\n          type=\"button\"\n          disabled={ disabled }\n          onClick={ setToLocalStorage }\n          variant=\"outline-success\"\n        >\n          Entrar\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","const globalFetch = async (URL) => {\n  const response = await fetch(URL);\n  const json = await response.json();\n  return json;\n};\n\nexport const fetchIngredient = async (site, ingrediente) => {\n  const URL = `https://www.the${site}db.com/api/json/v1/1/filter.php?i=${ingrediente}`;\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchName = async (site, nome) => {\n  const URL = `https://www.the${site}db.com/api/json/v1/1/search.php?s=${nome}`;\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchFirstLetter = async (site, primeiraLetra) => {\n  const URL = `https://www.the${site}db.com/api/json/v1/1/search.php?f=${primeiraLetra}`;\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchDetailsRecipe = async () => {\n  const URL = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=52772';\n  const response = await fetch(URL);\n  const data = await response.json();\n  return data;\n};\n\nexport const getDrink = async () => {\n  const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const getFood = async () => {\n  const URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchCategoryDrink = async () => {\n  const URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchCategoryFood = async (site, category) => {\n  const URL = `https://www.the${site}db.com/api/json/v1/1/list.php?c=${category}`;\n  const result = await globalFetch(URL);\n  return result;\n};\n\nexport const fetchSurprise = async (site) => {\n  const URL = `https://www.the${site}db.com/api/json/v1/1/random.php`;\n  const result = await globalFetch(URL);\n  return result;\n};\n","import React, { useState } from 'react';\nimport { bool, string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport './Header.css';\nimport useSearchbar from '../Context/useSearchbar';\n\nexport default function Header({ title, searchIconAppears = false }) {\n  const {\n    setSearchResult,\n    setSelectedSearch,\n    getSearch,\n  } = useSearchbar();\n\n  const [searchInput, setSearchInput] = useState(false);\n\n  function toggleInput() {\n    if (!searchInput) {\n      setSearchInput(true);\n    } else {\n      setSearchInput(false);\n    }\n  }\n\n  return (\n    <div className=\"headerbox\">\n      <header className=\"header title\">\n        <Link to=\"/perfil\" className=\"intheader\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            alt=\"Icone de perfil\"\n            width=\"40px\"\n            height=\"40px\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\">{title}</h1>\n        {searchIconAppears && (\n          <img\n            data-testid=\"search-top-btn\"\n            src={ searchIcon }\n            alt=\"Barra de pesquisa\"\n            width=\"40px\"\n            height=\"40px\"\n            onClick={ toggleInput }\n            role=\"presentation\"\n            className=\"intheader\"\n          />\n        )}\n      </header>\n      {searchInput && (\n        <div className=\"searchbar\">\n          <form>\n            <input\n              data-testid=\"search-input\"\n              placeholder=\"Buscar Receita\"\n              onChange={ ({ target }) => setSearchResult(target.value) }\n            />\n            <button\n              type=\"button\"\n              data-testid=\"exec-search-btn\"\n              onClick={ getSearch }\n            >\n              Buscar\n            </button>\n            <br />\n            <label htmlFor=\"ingredient-search-radio\">\n              <input\n                data-testid=\"ingredient-search-radio\"\n                id=\"ingredient-search-radio\"\n                name=\"search-radio\"\n                type=\"radio\"\n                value=\"ingredient\"\n                onChange={ ({ target }) => setSelectedSearch(target.value) }\n              />\n              Ingrediente\n            </label>\n            <label htmlFor=\"name-search-radio\">\n              <input\n                data-testid=\"name-search-radio\"\n                id=\"name-search-radio\"\n                name=\"search-radio\"\n                type=\"radio\"\n                value=\"name\"\n                onChange={ ({ target }) => setSelectedSearch(target.value) }\n              />\n              Nome\n            </label>\n            <label htmlFor=\"first-letter-search-radio\">\n              <input\n                data-testid=\"first-letter-search-radio\"\n                id=\"first-letter-search-radio\"\n                name=\"search-radio\"\n                type=\"radio\"\n                value=\"firstLetter\"\n                onChange={ ({ target }) => setSelectedSearch(target.value) }\n              />\n              Primeira Letra\n            </label>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: string,\n  searchIconAppears: bool,\n}.isRequired;\n","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport MyContext from './MyContext';\nimport { fetchIngredient, fetchName, fetchFirstLetter } from '../Services/FetchApi';\n\nexport default function useSearchbar() {\n  const { setRecipe, recipe } = useContext(MyContext);\n  const [searchResult, setSearchResult] = useState('');\n  const [selectedSearch, setSelectedSearch] = useState('');\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const recipeName = pathname === '/comidas' ? 'meals' : 'drinks';\n  const food = recipe[recipeName];\n\n  const getRecipe = () => {\n    const site = pathname === '/comidas' ? 'meal' : 'cocktail';\n\n    switch (selectedSearch) {\n    case 'ingredient':\n      return fetchIngredient(site, searchResult);\n    case 'name':\n      return fetchName(site, searchResult);\n    case 'firstLetter':\n      if (searchResult.length === 1) {\n        return fetchFirstLetter(site, searchResult);\n      }\n      // eslint-disable-next-line no-alert\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return { meals: [], drinks: [] };\n    default:\n      return { meals: [], drinks: [] };\n    }\n  };\n\n  const getSearch = async () => {\n    const recipeResult = await getRecipe();\n    setRecipe(recipeResult);\n  };\n\n  const redirectByChoice = () => {\n    const idFood = pathname === '/comidas' ? 'idMeal' : 'idDrink';\n\n    if (food.length === 1 && food) {\n      history.push(`${pathname}/${food[0][idFood]}`);\n    }\n  };\n\n  if (food) redirectByChoice();\n\n  if (!food) {\n    // eslint-disable-next-line no-alert\n    alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  return {\n    setSelectedSearch,\n    setSearchResult,\n    redirectByChoice,\n    getSearch,\n    getRecipe,\n  };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer data-testid=\"footer\" title=\"footer\">\n      <Link to=\"/bebidas\">\n        <img src={ drinkIcon } alt=\"drinks\" data-testid=\"drinks-bottom-btn\" />\n      </Link>\n      <Link to=\"/explorar\">\n        <img src={ exploreIcon } alt=\"explore\" data-testid=\"explore-bottom-btn\" />\n      </Link>\n      <Link to=\"/comidas\">\n        <img src={ mealIcon } alt=\"food\" data-testid=\"food-bottom-btn\" />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { string, number } from 'prop-types';\n\nexport default function CardRecipes({ index, thumb, title }) {\n  return (\n    <section className={ `card${index}` } data-testid={ `${index}-recipe-card` }>\n      <img\n        className=\"foodimg\"\n        data-testid={ `${index}-card-img` }\n        src={ thumb }\n        alt=\"Receita\"\n      />\n      <p data-testid={ `${index}-card-name` }>{title}</p>\n    </section>\n  );\n}\n\nCardRecipes.propTypes = {\n  index: number,\n  thumb: string,\n  title: string,\n  id: string,\n}.isRequired;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../Context/MyContext';\n\nexport default function CategoryButtons() {\n  const { setFood, setDrink, search, setSearch } = useContext(MyContext);\n  const [category, setCategory] = useState([]);\n  const history = useHistory();\n  const { pathname } = history.location;\n  const [toggle, setToggle] = useState('');\n\n  const fetchCategoryMeal = async () => {\n    const URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const result = await fetch(URL);\n    const { meals } = await result.json();\n    if (meals.length) history.push(/comidas/);\n    setCategory(meals);\n  };\n\n  const fetchCategoryDrink = async () => {\n    const URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const result = await fetch(URL);\n    const { drinks } = await result.json();\n    if (drinks.length) history.push(/bebidas/);\n    setCategory(drinks);\n  };\n\n  function chooseFood() {\n    if (pathname === '/bebidas') {\n      return fetchCategoryDrink();\n    }\n    return fetchCategoryMeal();\n  }\n\n  const categoryFilter = async (strCategory) => {\n    if (pathname === '/bebidas') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n      console.log(URL);\n      const response = await fetch(URL);\n      const categories = await response.json();\n      setDrink(categories.drinks);\n    } else {\n      const URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n      const response = await fetch(URL);\n      const categories = await response.json();\n      setFood(categories.meals);\n    }\n  };\n  const allCategories = async () => {\n    if (pathname === '/bebidas') {\n      const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const response = await fetch(URL);\n      const categories = await response.json();\n      setDrink(categories.drinks);\n    } else {\n      const URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      const response = await fetch(URL);\n      const categories = await response.json();\n      setFood(categories.meals);\n    }\n  };\n\n  function toggleCategory({ target }) {\n    if (toggle === target.name) {\n      setToggle('');\n      setSearch(false);\n    } else {\n      setToggle(target.name);\n      setSearch(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchCategoryMeal();\n    fetchCategoryDrink();\n    chooseFood();\n  }, []);\n\n  useEffect(() => {\n    if (!search) {\n      if (toggle !== '') {\n        categoryFilter(toggle);\n      } else {\n        allCategories();\n      }\n    }\n  }, [toggle]);\n\n  const maxList = 5;\n\n  return (\n    <div>\n      <button\n        id=\"btn-all\"\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => allCategories() }\n      >\n        All\n      </button>\n      {category.length > 0 && category.map(({ strCategory }, index) => (\n        index < maxList && (\n          <label htmlFor={ `${strCategory}${index}` } key={ index }>\n            <button\n              type=\"button\"\n              data-testid={ `${strCategory}-category-filter` }\n              name={ strCategory }\n              onClick={ (e) => toggleCategory(e) }\n            >\n              { strCategory }\n            </button>\n          </label>\n        )\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport CardRecipes from '../Components/CardRecipes';\nimport './Styles/RecipesFoods.css';\nimport MyContext from '../Context/MyContext';\nimport CategoryButtons from '../Components/CategoryButtons';\n\nexport default function RecipesFoods() {\n  const { food, setFood } = useContext(MyContext);\n  const showMaxRecipes = 12;\n\n  const getFood = async () => {\n    const URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(URL);\n    const json = await response.json();\n    setFood(json.meals);\n  };\n\n  useEffect(() => {\n    if (food.length === 0) {\n      getFood();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Header className=\"title\" title=\"Comidas\" searchIconAppears />\n      <CategoryButtons />\n      <div className=\"cardlist\">\n        {food.length > 0 && food.map((recp, index) => (\n          index < showMaxRecipes\n          && (\n            <Link\n              className=\"link\"\n              key={ recp.idMeal }\n              to={ {\n                pathname: `/comidas/${recp.idMeal}`,\n              } }\n            >\n              <CardRecipes\n                key={ index }\n                index={ index }\n                thumb={ recp.strMealThumb }\n                title={ recp.strMeal }\n              />\n            </Link>\n          )\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport CardRecipes from '../Components/CardRecipes';\nimport MyContext from '../Context/MyContext';\nimport CategoryButtons from '../Components/CategoryButtons';\n\nexport default function RecipesDrinks() {\n  const { drink, setDrink } = useContext(MyContext);\n  const showMaxRecipes = 12;\n\n  const getDrink = async () => {\n    const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(URL);\n    const json = await response.json();\n    setDrink(json.drinks);\n  };\n\n  useEffect(() => {\n    if (drink.length === 0) {\n      getDrink();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Header className=\"title\" title=\"Bebidas\" searchIconAppears />\n      <CategoryButtons />\n      <div className=\"cardlist\">\n        {drink.length > 0 && drink.map((recp, index) => (\n          index < showMaxRecipes\n          && (\n            <Link\n              className=\"link\"\n              key={ recp.idDrink }\n              to={ {\n                pathname: `/bebidas/${recp.idDrink}`,\n              } }\n            >\n              <CardRecipes\n                key={ index }\n                index={ index }\n                thumb={ recp.strDrinkThumb }\n                title={ recp.strDrink }\n              />\n            </Link>\n          )\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Header from '../Components/Header';\nimport './Styles/Profile.css';\nimport perfilbg from './perfilbg.mp4';\nimport Footer from '../Components/Footer';\n\nfunction Profile() {\n  const history = useHistory();\n\n  const userEmail = JSON.parse(localStorage.getItem('user')).email;\n  // console.log(userEmail);\n\n  return (\n    <div>\n      <video\n        width=\"360\"\n        height=\"640\"\n        playsinline\n        autoPlay\n        muted\n        loop\n        className=\"bgVideo\"\n      >\n        <source src={ perfilbg } type=\"video/mp4\" />\n      </video>\n      <Header title=\"Perfil\" />\n      <div className=\"perfilpage\">\n        <main className=\"main-profile\">\n          <p data-testid=\"profile-email\">{userEmail}</p>\n          <Button\n            type=\"button\"\n            onClick={ () => history.push('/receitas-feitas') }\n            data-testid=\"profile-done-btn\"\n            className=\"button-one\"\n            variant=\"outline-success\"\n          >\n            Receitas Feitas\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={ () => history.push('/receitas-favoritas') }\n            data-testid=\"profile-favorite-btn\"\n            className=\"button-two\"\n            variant=\"outline-dark\"\n          >\n            Receitas Favoritas\n          </Button>\n          <Link to=\"/\">\n            <Button\n              type=\"button\"\n              onClick={ () => localStorage.clear() }\n              data-testid=\"profile-logout-btn\"\n              className=\"button-three\"\n              variant=\"outline-danger\"\n            >\n              Sair\n            </Button>\n          </Link>\n        </main>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport Header from '../Components/Header';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default function RecipesDone() {\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [doneRecipes, setDoneRecipes] = useState(recipesDone);\n  const [copyText, setCopyText] = useState('');\n\n  const doneRecipesFilter = (type) => {\n    if (type === 'all') {\n      setDoneRecipes(recipesDone);\n    } else {\n      const filteredResult = recipesDone.filter((item) => item.type === type);\n      setDoneRecipes(filteredResult);\n    }\n  };\n\n  const copyToClipboard = (recipe) => {\n    copy(`http://localhost:3000/${recipe.type}s/${recipe.id}`);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n  };\n\n  function showTag(item1, index1) {\n    if (item1.type === 'comida') {\n      return (\n        item1.tags.map((tagItem, tagIndex) => (\n          <p data-testid={ `${index1}-${tagItem}-horizontal-tag` } key={ tagIndex }>\n            {tagItem}\n          </p>\n        ))\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Header title=\"Receitas Feitas\" />\n      <p>{copyText}</p>\n      <section>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => doneRecipesFilter('all') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => doneRecipesFilter('comida') }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => doneRecipesFilter('bebida') }\n        >\n          Drink\n        </button>\n      </section>\n      {\n        recipesDone ? doneRecipes.map((item, index) => {\n          if (item.type === 'comida') {\n            return (\n              <section>\n                <Link to={ `/comidas/${item.id}` }>\n                  <img\n                    data-testid={ `${index}-horizontal-image` }\n                    alt=\"recipe\"\n                    src={ item.image }\n                  />\n                </Link>\n                <section>\n                  <input\n                    type=\"image\"\n                    data-testid={ `${index}-horizontal-share-btn` }\n                    src={ shareIcon }\n                    alt=\"share Icon\"\n                    onClick={ copyToClipboard }\n                  />\n                  <Link to={ `/comidas/${item.id}` }>\n                    <h4 data-testid={ `${index}-horizontal-name` }>{ item.name }</h4>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    {`${item.area} - ${item.category}` }\n                  </p>\n                  <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n                  { showTag(item, index) }\n                </section>\n              </section>\n            );\n          }\n          return (\n            <section key={ index }>\n              <Link to={ `/bebidas/${item.id}` }>\n                <img\n                  width=\"200px\"\n                  data-testid={ `${index}-horizontal-image` }\n                  alt=\"recipe\"\n                  src={ item.image }\n                />\n              </Link>\n              <section>\n                <button\n                  type=\"button\"\n                  onClick={ copyToClipboard }\n                >\n                  <img\n                    data-testid={ `${index}-horizontal-share-btn` }\n                    alt=\"share\"\n                    src={ shareIcon }\n                  />\n                </button>\n                <Link to={ `/bebidas/${item.id}` }>\n                  <h4 data-testid={ `${index}-horizontal-name` }>{ item.name }</h4>\n                </Link>\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { item.alcoholicOrNot }\n                </p>\n                <b />\n                <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n              </section>\n            </section>\n          );\n        }) : null\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../Components/Header';\n\nfunction FavoriteRecipes() {\n  return (\n    <div>\n      <Header title=\"Receitas Favoritas\" />\n      <h1>Tela de Receitas Favoritas</h1>\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport CardRecipes from '../Components/CardRecipes';\n\nfunction ExploreFoodOrigin() {\n  const [areas, setAreas] = useState([]);\n  const [foods, setFoods] = useState([]);\n\n  const showMaxRecipes = 12;\n  const AllURL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\n  async function AllBtn() {\n    const response = await fetch(AllURL);\n    const result = await response.json();\n    setFoods(result.meals);\n    return result;\n  }\n\n  async function areaRequest(e) {\n    const area = e.target.value;\n    let URL = '';\n    console.log(area);\n    if (e.target.value !== 'All') {\n      URL = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`;\n      const request = await fetch(URL);\n      const response = await request.json();\n      setFoods(response.meals);\n      return response;\n    }\n  }\n\n  useEffect(() => {\n    // busca os países.\n    const getFoodsByArea = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const result = await response.json();\n      setAreas(result.meals);\n      return result;\n    };\n    getFoodsByArea();\n    AllBtn();\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" searchIconAppears />\n\n      <select onChange={ (e) => areaRequest(e) } data-testid=\"explore-by-area-dropdown\">\n        <option data-testid=\"All-option\" onClick={ () => AllBtn() }>All</option>\n        { areas.map(({ strArea }, index) => (\n          <option\n            data-testid={ `${strArea}-option` }\n            key={ `${strArea}${index}` }\n          >\n            {strArea}\n          </option>\n        )) }\n      </select>\n\n      <h3>Resultados</h3>\n      {foods.length > 0 && foods.map(({ strMeal, strMealThumb, idMeal }, index) => (\n        index < showMaxRecipes\n          && (\n            <Link\n              className=\"link\"\n              key={ `${idMeal}` }\n              to={ {\n                pathname: `/comidas/${idMeal}`,\n              } }\n            >\n              <CardRecipes\n                data-testid={ `${index}-recipe-card` }\n                key={ index }\n                index={ index }\n                thumb={ strMealThumb }\n                title={ strMeal }\n              />\n            </Link>\n          )\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodOrigin;\n","import React from 'react';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nexport default function ExploreDrinksIngredient() {\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes \" />\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nexport default function ExploreFoodIngredients() {\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n      <Footer />\n    </div>\n  );\n}\n","const mealOrDrink = (food) => {\n  const foods = food.concat('s');\n  const site = food === 'drink' ? 'cocktail' : 'meal';\n  const idFood = food === 'drink' ? 'idDrink' : 'idMeal';\n  const routeName = food === 'drink' ? 'bebidas' : 'comidas';\n  return {\n    foods,\n    site,\n    idFood,\n    routeName,\n  };\n};\n\nexport default mealOrDrink;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { fetchSurprise } from '../Services/FetchApi';\nimport mealOrDrink from '../Services/MealOrDrink';\n\nexport default function useExploreRecipes(type) {\n  const { push, location } = useHistory();\n  const [id, setId] = useState(0);\n\n  const { idFood, routeName, site, foods } = mealOrDrink(type);\n\n  const backToExplore = (typeBack) => {\n    push(`${location.pathname}/${typeBack}`);\n  };\n\n  const redirectToSurpriseMe = () => push(`/${routeName}/${id}`);\n\n  useEffect(() => {\n    const fetchDidMount = async () => {\n      const response = await fetchSurprise(site);\n      const idResponse = response[foods][0][idFood];\n      setId(idResponse);\n    };\n    fetchDidMount();\n  }, [foods, idFood, site, routeName]);\n\n  return { backToExplore, redirectToSurpriseMe };\n}\n","import React from 'react';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport useExploreRecipes from '../Context/useExploreRecipes';\n\nexport default function ExploreDrinks() {\n  const { backToExplore, redirectToSurpriseMe } = useExploreRecipes('drink');\n\n  return (\n    <div>\n      <Header title=\"Explorar Bebidas\" />\n      <button\n        data-testid=\"explore-by-ingredient\"\n        type=\"button\"\n        onClick={ () => backToExplore('ingredientes') }\n      >\n        Por Ingredientes\n      </button>\n      <button\n        data-testid=\"explore-surprise\"\n        type=\"button\"\n        onClick={ () => redirectToSurpriseMe('bebidas') }\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport useExploreRecipes from '../Context/useExploreRecipes';\n\nexport default function ExploreFood() {\n  const { backToExplore, redirectToSurpriseMe } = useExploreRecipes('meal');\n\n  return (\n    <div>\n      <Header title=\"Explorar Comidas\" />\n      <button\n        data-testid=\"explore-by-ingredient\"\n        type=\"button\"\n        onClick={ () => backToExplore('ingredientes') }\n      >\n        Por Ingredientes\n      </button>\n      <button\n        data-testid=\"explore-by-area\"\n        type=\"button\"\n        onClick={ () => backToExplore('area') }\n      >\n        Por Local de Origem\n      </button>\n      <button\n        data-testid=\"explore-surprise\"\n        type=\"button\"\n        onClick={ () => redirectToSurpriseMe('comidas') }\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nexport default function Explore() {\n  const { push } = useHistory();\n  const redirectPageTo = (type) => push(`/explorar/${type}`);\n\n  return (\n    <div>\n      <Header title=\"Explorar\" />\n      <button\n        onClick={ () => redirectPageTo('comidas') }\n        type=\"button\"\n        data-testid=\"explore-food\"\n      >\n        Explorar Comidas\n      </button>\n      <button\n        onClick={ () => redirectPageTo('bebidas') }\n        type=\"button\"\n        data-testid=\"explore-drinks\"\n      >\n        Explorar Bebidas\n      </button>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction ShareButton({ idRecipe }) {\n  const [isCopy, setIsCopy] = useState(false);\n\n  const copyToClipboard = ({ target }) => {\n    setIsCopy(true);\n    const { alt } = target;\n    const path = `http://localhost:3000/${alt}`;\n    navigator.clipboard.writeText(path);\n  };\n\n  return (\n    <>\n      {isCopy ? <span>Link copiado!</span> : false}\n      <button\n        data-testid=\"share-btn\"\n        type=\"button\"\n        onClick={ (event) => copyToClipboard(event) }\n      >\n        <img src={ shareIcon } alt={ idRecipe } />\n      </button>\n    </>\n  );\n}\n\nShareButton.propTypes = {\n  idRecipe: PropTypes.string,\n}.isRequired;\n\nexport default ShareButton;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport MyContext from '../Context/MyContext';\n\nfunction FavoriteBtn({ id, type, area, category, alcoholicOrNot, name, image, index }) {\n  const {\n    isFavorite, setIsFavorite,\n  } = useContext(MyContext);\n  // const [myLocalStorage, setmyLocalStorage] = useState([]);\n\n  const recipeId = id;\n\n  const setButton = () => {\n    const getLocalStr = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const checkLocalStr = Object.values(getLocalStr)\n      .some(({ id: strId }) => strId === recipeId);\n\n    setIsFavorite(checkLocalStr);\n  };\n\n  useEffect(() => {\n    setButton();\n  });\n\n  const setUnfavorite = () => {\n    setIsFavorite(!isFavorite);\n\n    const recipeDetails = {\n      id,\n      type,\n      area,\n      category,\n      alcoholicOrNot,\n      name,\n      image,\n    };\n\n    // console.log(recipeDetails);\n    const storageFavorites = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const checkLocalStr = Object.values(storageFavorites)\n      .some(({ id: strId }) => strId === recipeId);\n\n    if (checkLocalStr) {\n      const getRecipeId = JSON.stringify(storageFavorites\n        .filter((recipe) => recipe.id !== recipeId));\n      localStorage.setItem('favoriteRecipes', getRecipeId);\n      console.log(getRecipeId);\n      setIsFavorite(false);\n    } else {\n      const myStructure = JSON.stringify([...storageFavorites, recipeDetails]);\n      console.log(myStructure);\n      localStorage.setItem('favoriteRecipes', myStructure);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        onClick={ setUnfavorite }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ !isFavorite ? whiteHeartIcon : blackHeartIcon }\n          alt=\"set favorite\"\n        />\n      </button>\n    </div>\n  );\n}\n\nFavoriteBtn.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string),\n}.isRequired;\n\nexport default FavoriteBtn;\n","const checkInProgress = () => {\n  const initialObj = {\n    cocktails: {},\n    meals: {},\n  };\n\n  const lookForInProgress = localStorage.getItem('inProgressRecipes');\n\n  if (!lookForInProgress) {\n    localStorage.setItem('inProgressRecipes', JSON.stringify(initialObj));\n  }\n};\n\nexport default checkInProgress;\n","import React, { useEffect, useContext } from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDrink, getFood } from '../Services/FetchApi';\nimport MyContext from '../Context/MyContext';\nimport CardRecipes from './CardRecipes';\nimport './Recomended.css';\n\nfunction RecomendedRecipes({ origem }) {\n  const { cards, setCards } = useContext(MyContext);\n  const busca = async () => {\n    console.log(origem);\n    if (origem.includes('comidas')) {\n      const resposta = await getDrink();\n      setCards(resposta.drinks);\n    } else {\n      const resposta = await getFood();\n      setCards(resposta.meals);\n    }\n  };\n  useEffect(() => {\n    busca();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const renderCardRecipes = () => {\n    const showMaxRecipes = 6;\n    if (cards) {\n      const filteredRecipe = cards.filter(\n        (item, index) => index < showMaxRecipes,\n      );\n      return filteredRecipe;\n    }\n  };\n  if (origem.includes('comidas')) {\n    return (\n      <div className=\"slider\">\n        {cards.length > 0 && renderCardRecipes().map((recp, index) => (\n          <Link\n            data-testid={ `${index}-recomendation-card` }\n            className=\"recomendation-card\"\n            key={ index }\n            to=\"/bebidas/details-recipe\"\n          >\n            <CardRecipes\n              key={ index }\n              index={ index }\n              thumb={ recp.strDrinkThumb }\n              title={ recp.strDrink }\n            />\n          </Link>\n        ))}\n      </div>);\n  }\n  return (\n    <div className=\"cardlist\">\n      {cards.length > 0 && renderCardRecipes().map((recp, index) => (\n        <Link\n          className=\"recomendation-card\"\n          data-testid={ `${index}-recomendation-card` }\n          key={ index }\n          to=\"/comidas/details-recipe\"\n        >\n          <CardRecipes\n            key={ index }\n            index={ index }\n            thumb={ recp.strMealThumb }\n            title={ recp.strMeal }\n          />\n        </Link>\n      ))}\n    </div>);\n}\n\nRecomendedRecipes.propTypes = {\n  origem: PropTypes.string.isRequired,\n};\n\nexport default RecomendedRecipes;\n\nRecomendedRecipes.propTypes = {\n  origem: string,\n}.isRequired;\n","import PropTypes from 'prop-types';\n\nexport default function veriryrecipeisdone({ match: { params: { id } } }) {\n  // const [recipes, setRecipes] = useState([]);\n  function veriryrecipe() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    if (doneRecipes.length > 0) {\n      return doneRecipes.some((recipe) => recipe.id === id);\n    }\n    return false;\n  }\n\n  return [veriryrecipe];\n}\n\nveriryrecipeisdone.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport ShareButton from '../Components/ShareButton';\nimport FavoriteButton from '../Components/FavoriteButton';\nimport checkInProgress from '../Services/checkInProgress';\nimport RecomendedRecipes from '../Components/RecomendedRecipes';\nimport veriryrecipeisdone from '../Services/veriryrecipeisdone';\nimport './Styles/detailsrecipe.css';\n\nfunction DrinkDetails({ match: { params: { id } }, location: { pathname } }) {\n  const [recipes, setRecipes] = useState([]);\n  const { veriryrecipe } = veriryrecipeisdone;\n\n  // Didmount - Faz fetch trazendo a receita pelo id e seta o stado recipes com as receita\n  useEffect(() => {\n    const getApi = async () => {\n      const endPoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(endPoint);\n      const results = await response.json();\n      const drink = results.drinks[0];\n      setRecipes(drink);\n    };\n    getApi();\n  }, [id]);\n\n  // retorna o array com os ingredientes\n  const ingredientsRecipe = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strIngredient'));\n    const ingredients = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients.push(recipes[key]);\n      }\n    });\n    return ingredients;\n  };\n\n  // retorna um array com as medidas de cada ingredientes\n  const ingredientsMesure = () => {\n    const arrayIngredientKeys = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strMeasure'));\n    const ingredients2 = [];\n    arrayIngredientKeys.forEach((key) => {\n      if (recipes[key]) {\n        ingredients2.push(recipes[key]);\n      }\n    });\n    return ingredients2;\n  };\n\n  // retorna a concatenação do retorno da função ingredientsMesure com ingredientsRecipe\n  const concatIngredientWithMesure = () => {\n    const newArray = [];\n    for (let index = 0; index <= ingredientsRecipe().length; index += 1) {\n      newArray.push(`-${ingredientsRecipe()[index]} - ${ingredientsMesure()[index]}`);\n    }\n    return newArray;\n  };\n  const essaPagina = pathname;\n\n  checkInProgress();\n  const checkStart = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgress && Object.keys(inProgress.cocktails)\n      .find((key) => key === recipes.idDrink)) {\n      return 'Continuar Receita';\n    }\n    return 'Iniciar Receita';\n  };\n\n  // function verifyrecipeisdone() {\n  //   const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  //   if (doneRecipes.length > 0) {\n  //     return doneRecipes.some((recipe) => recipe.id === id);\n  //   }\n  //   return false;\n  // }\n\n  return (\n    <div>\n      <img\n        id=\"img-recipe\"\n        src={ recipes.strDrinkThumb }\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da receita\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipes.strDrink }</h2>\n      <ShareButton idRecipe={ `bebidas/${recipes.idDrink}` } />\n      <FavoriteButton\n        id={ recipes.idDrink }\n        type=\"bebida\"\n        area=\"\"\n        category=\"Cocktail\"\n        alcoholicOrNot={ recipes.strAlcoholic }\n        name={ recipes.strDrink }\n        image={ recipes.strDrinkThumb }\n      />\n      <h3 data-testid=\"recipe-category\">\n        {recipes.strCategory && recipes.strAlcoholic}\n      </h3>\n      <h3>Ingredients</h3>\n      <ul>\n        { concatIngredientWithMesure()\n          .map((igredient, index) => (\n            <li\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {igredient}\n            </li>)) }\n      </ul>\n      <h3 data-testid=\"instructions\">{recipes.strInstructions}</h3>\n      <br />\n      <h4>Recomendations:</h4>\n      <div id=\"recommended\"><RecomendedRecipes origem={ essaPagina } /></div>\n      <div>\n        <Link to={ `/bebidas/${recipes.idDrink}/in-progress` } params={ recipes.idDrink }>\n          <Button\n            className=\"start-recipe-btn\"\n            type=\"button\"\n            style={ { display: veriryrecipe ? 'none' : 'initial' } }\n            data-testid=\"start-recipe-btn\"\n          >\n            { checkStart() }\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DrinkDetails;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ShareButton from '../Components/ShareButton';\nimport FavoriteButton from '../Components/FavoriteButton';\nimport './Styles/ProcessFoods.css';\n// import MyContext from '../Context/MyContext';\n\nexport default function ProcessFoods({ match: { params: { id } } }) {\n  const [recipes, setRecipes] = useState([]);\n  const [disabled, setDisabled] = useState(true);\n  const [numberOfChecked, setNumberOfChecked] = useState(0);\n  // const { ingredients, setIngredients } = useContext(MyContext);\n  // const { inProgress, setInprogress } = useContext(MyContext);\n  // const { checkedIngredients, setCheckIngredients } = useContext(MyContext);\n  // const { allChecked, setAllChecked } = useContext(MyContext);\n\n  // Didmount - Faz fetch trazendo a receita pelo id e seta o stado recipes com as receita\n  useEffect(() => {\n    const getApi = async () => {\n      const endPoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(endPoint);\n      const results = await response.json();\n      const meals = results.meals[0];\n      setRecipes(meals);\n    };\n    getApi();\n  }, [id]);\n  // retorna o array com os ingredientes\n  const ingredientsRecipe = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strIngredient'));\n    const ingredients = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients.push(recipes[key]);\n      }\n    });\n    return ingredients;\n  };\n  // retorna um array com as medidas de cada ingredientes\n  const ingredientsMesure = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strMeasure'));\n    const ingredients2 = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients2.push(recipes[key]);\n      }\n    });\n    return ingredients2;\n  };\n  // retorna a concatenação do retorno da função ingredientsMesure com ingredientsRecipe\n  const concatIngredientWithMesure = () => {\n    const newArray = [];\n    for (let index = 0; index < ingredientsRecipe().length; index += 1) {\n      newArray.push(`-${ingredientsRecipe()[index]} - ${ingredientsMesure()[index]}`);\n    }\n    return newArray;\n  };\n\n  // useEffect(() => {\n  //   setTaskBtnsEnabled(numberOfChecked > 0);\n  // }, [numberOfChecked]);\n  console.log(numberOfChecked);\n  function count(e) {\n    if (e.target.checked === true) {\n      setNumberOfChecked(numberOfChecked + 1);\n    } else {\n      setNumberOfChecked(numberOfChecked - 1);\n    }\n  }\n\n  const handleChange = () => {\n    const a = document.getElementsByClassName('count-checkboxes').length - 1;\n    console.log(a, numberOfChecked);\n    if (numberOfChecked === a) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n  // checa inputs checkbox\n  // const checkedInputs = () => {\n  //   if (setCheckIngredients === arrayRecipesFiltered.length) {\n  //     return setAllChecked(true);\n  //   }\n  //   return setAllChecked(false);\n  // };\n\n  // useEffect(() => {\n  //   updateLocalStorage();\n  //   const storage = JSON.parse(localStorage.getItem('inProgressRecipes')) || [];\n  //   localStorage.setItem('inProgressRecipes', JSON\n  //     .stringify(storage));\n  // }, []);\n  // // Acrescenta\n  // const handleClick = (event) => {\n  //   if (event.target.checked === true) {\n  //     setInprogress(inProgress + 1);\n  //     return setIngredients([...ingredients, event.target.value]);\n  //   }\n  // };\n\n  // const updateLocalStorage = () => {\n  //   const newLocalStorage = {\n  //     cocktails: allMealsStorage,\n  //     meals: { ...otherStorageRecepies, [id]: [...ingredients] } };\n  //   const newLocalStorageString = JSON.stringify(newLocalStorage);\n  //   localStorage.setItem('inProgressRecipes', newLocalStorageString);\n\n  //   const storage = JSON.parse(localStorage.getItem('inProgressRecipes')) || [];\n  //   if (event.target.checked) {\n  //     localStorage.setItem('inProgressRecipes', JSON\n  //       .stringify([...storage, event.target.value]));\n  //   } else {\n  //     localStorage.setItem('inProgressRecipes', JSON\n  //       .stringify(storage.filter((item) => item !== event.target.value)));\n  //   }\n  // };\n  return (\n    <div>\n      <img\n        id=\"img-recipe\"\n        src={ recipes.strMealThumb }\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da receita\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipes.strMeal }</h2>\n      <ShareButton idRecipe={ `comidas/${recipes.idMeal}` } />\n      <FavoriteButton\n        id={ recipes.idMeal }\n        type=\"comida\"\n        area={ recipes.strArea }\n        category={ recipes.strCategory }\n        name={ recipes.strMeal }\n        alcoholicOrNot=\"\"\n        image={ recipes.strMealThumb }\n      />\n      <h3 data-testid=\"recipe-category\">{ recipes.strCategory }</h3>\n      <h3>Ingredients</h3>\n      <ul>\n        { concatIngredientWithMesure()\n          .map((igredient, index) => (\n            <label\n              key={ index }\n              data-testid={ `${index}-ingredient-step` }\n              htmlFor={ igredient[index] }\n            >\n              <input\n                className=\"count-checkboxes\"\n                type=\"checkbox\"\n                id={ igredient[index] }\n                value={ igredient }\n                onChange={ () => handleChange() }\n                onClick={ (e) => count(e) }\n                // checked=\"checked\"\n              />\n              {' '}\n              { igredient }\n            </label>)) }\n      </ul>\n      <h3 data-testid=\"instructions\">Instructions</h3>\n      <p>{recipes.strInstructions}</p>\n      <Link to=\"/receitas-feitas\">\n        <button\n          id=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ disabled }\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nProcessFoods.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ShareButton from '../Components/ShareButton';\nimport FavoriteButton from '../Components/FavoriteButton';\n\nexport default function ProcessDrinks({ match: { params: { id } } }) {\n  const [recipes, setRecipes] = useState([]);\n  const [disabled, setDisabled] = useState(true);\n  const [numberOfChecked, setNumberOfChecked] = useState(0);\n  // Didmount - Faz fetch trazendo a receita pelo id e seta o stado recipes com as receita\n  useEffect(() => {\n    const getApi = async () => {\n      const endPoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(endPoint);\n      const results = await response.json();\n      const drinks = results.drinks[0];\n      setRecipes(drinks);\n    };\n    getApi();\n  }, [id]);\n  // retorna o array com os ingredientes\n  const ingredientsRecipe = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strIngredient'));\n    const ingredients = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients.push(recipes[key]);\n      }\n    });\n    return ingredients;\n  };\n  // retorna um array com as medidas de cada ingredientes\n  const ingredientsMesure = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strMeasure'));\n    const ingredients2 = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients2.push(recipes[key]);\n      }\n    });\n    return ingredients2;\n  };\n  // retorna a concatenação do retorno da função ingredientsMesure com ingredientsRecipe\n  const concatIngredientWithMesure = () => {\n    const newArray = [];\n    for (let index = 0; index < ingredientsRecipe().length; index += 1) {\n      newArray.push(`-${ingredientsRecipe()[index]} - ${ingredientsMesure()[index]}`);\n    }\n    return newArray;\n  };\n\n  function count(e) {\n    if (e.target.checked === true) {\n      setNumberOfChecked(numberOfChecked + 1);\n    } else {\n      setNumberOfChecked(numberOfChecked - 1);\n    }\n  }\n\n  const handleChange = () => {\n    const a = document.getElementsByClassName('count-checkboxes').length - 1;\n    console.log(a, numberOfChecked);\n    if (numberOfChecked === a) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <div>\n      <img\n        id=\"img-recipe\"\n        src={ recipes.strDrinkThumb }\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da receita\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipes.strDrink }</h2>\n      <ShareButton idRecipe={ `bebidas/${recipes.idDrink}` } />\n      <FavoriteButton\n        id={ recipes.idDrink }\n        type=\"bebida\"\n        area=\"\"\n        category=\"Cocktail\"\n        alcoholicOrNot={ recipes.strAlcoholic }\n        name={ recipes.strDrink }\n        image={ recipes.strDrinkThumb }\n      />\n      <h3 data-testid=\"recipe-category\">{ recipes.strCategory }</h3>\n      <h3>Ingredients</h3>\n      { concatIngredientWithMesure()\n        .map((igredient, index) => (\n          <label\n            key={ index }\n            data-testid={ `${index}-ingredient-step` }\n            htmlFor={ igredient[index] }\n          >\n            <input\n              type=\"checkbox\"\n              id={ igredient[index] }\n              className=\"count-checkboxes\"\n              value={ igredient }\n              onChange={ () => handleChange() }\n              onClick={ (e) => count(e) }\n            />\n            {' '}\n            { igredient }\n          </label>)) }\n      <h3 data-testid=\"instructions\">Instructions</h3>\n      <p>{recipes.strInstructions}</p>\n      <Link to=\"/receitas-feitas\">\n        <button\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ disabled }\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nProcessDrinks.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport ShareButton from '../Components/ShareButton';\nimport FavoriteButton from '../Components/FavoriteButton';\nimport checkInProgress from '../Services/checkInProgress';\nimport RecomendedRecipes from '../Components/RecomendedRecipes';\nimport './Styles/detailsrecipe.css';\n\nfunction FoodDetails({ match: { params: { id } }, location: { pathname } }) {\n  const [recipes, setRecipes] = useState([]);\n\n  // Didmount - Faz fetch trazendo a receita pelo id e seta o stado recipes com as receita\n  useEffect(() => {\n    const getApi = async () => {\n      const endPoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(endPoint);\n      const results = await response.json();\n      const meals = results.meals[0];\n      setRecipes(meals);\n    };\n    getApi();\n  }, [id]);\n\n  // retorna o array com os ingredientes\n  const ingredientsRecipe = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strIngredient'));\n    const ingredients = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients.push(recipes[key]);\n      }\n    });\n    return ingredients;\n  };\n  // retorna um array com as medidas de cada ingredientes\n  const ingredientsMesure = () => {\n    const arrayIndredientKids = Object.keys(recipes)\n      .filter((item) => item\n        .includes('strMeasure'));\n    const ingredients2 = [];\n    arrayIndredientKids.forEach((key) => {\n      if (recipes[key]) {\n        ingredients2.push(recipes[key]);\n      }\n    });\n    return ingredients2;\n  };\n  // retorna a concatenação do retorno da função ingredientsMesure com ingredientsRecipe\n  const concatIngredientWithMesure = () => {\n    const newArray = [];\n    for (let index = 0; index <= ingredientsRecipe().length; index += 1) {\n      newArray.push(`-${ingredientsRecipe()[index]} - ${ingredientsMesure()[index]}`);\n    }\n    return newArray;\n  };\n\n  const essaPagina = pathname;\n  // console.log(essaPagina);\n\n  checkInProgress();\n  const checkStart = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgress && Object.keys(inProgress.meals)\n      .find((key) => key === recipes.idMeal)) {\n      return 'Continuar Receita';\n    }\n    return 'Iniciar Receita';\n  };\n\n  function verifyrecipeisdone() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    if (doneRecipes.length > 0) {\n      return doneRecipes.some((recipe) => recipe.id === id);\n    }\n    return false;\n  }\n\n  return (\n    <div>\n      <img\n        className=\"img-recipe\"\n        src={ recipes.strMealThumb }\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da receita\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipes.strMeal }</h2>\n      <ShareButton idRecipe={ `comidas/${recipes.idMeal}` } />\n      <FavoriteButton\n        id={ recipes.idMeal }\n        type=\"comida\"\n        area={ recipes.strArea }\n        category={ recipes.strCategory }\n        name={ recipes.strMeal }\n        alcoholicOrNot=\"\"\n        image={ recipes.strMealThumb }\n      />\n      <h3 data-testid=\"recipe-category\">{ recipes.strCategory }</h3>\n      <h3>Ingredients</h3>\n      <ul>\n        {\n          concatIngredientWithMesure()\n            .map((igredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ index }\n              >\n                {igredient}\n              </li>\n            ))\n        }\n      </ul>\n      <h3 data-testid=\"instructions\">{recipes.strInstructions}</h3>\n      <h3>Video</h3>\n      <div>\n        <ReactPlayer\n          data-testid=\"video\"\n          url={ recipes.strYoutube }\n        />\n      </div>\n      <div id=\"recommended\"><h4>Recomendations:</h4></div>\n      <br />\n      <div className=\"recommended\">\n        <RecomendedRecipes origem={ essaPagina } />\n      </div>\n      <br />\n      <div>\n        <Link to={ `/comidas/${recipes.idMeal}/in-progress` } params={ recipes.idMeal }>\n          <Button\n            className=\"start-recipe-btn\"\n            type=\"button\"\n            style={ { display: verifyrecipeisdone() ? 'none' : 'initial' } }\n            data-testid=\"start-recipe-btn\"\n          >\n            { checkStart() }\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n};\n\nexport default FoodDetails;\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from '../Pages/Login';\nimport RecipesFoods from '../Pages/RecipesFoods';\nimport RecipesDrinks from '../Pages/RecipesDrinks';\nimport Profile from '../Pages/Profile';\nimport RecipesDone from '../Pages/RecipesDone';\nimport FavoriteRecipes from '../Pages/FavoriteRecipes';\nimport ExploreFoodOrigin from '../Pages/ExploreFoodOrigin';\nimport ExploreDrinksIngredients from '../Pages/ExploreDrinksIngredients';\nimport ExploreFoodsIngridients from '../Pages/ExploreFoodsIngredients';\nimport ExploreDrinks from '../Pages/ExploreDrinks';\nimport ExploreFoods from '../Pages/ExploreFoods';\nimport Explore from '../Pages/Explore';\nimport DrinkDetails from '../Pages/DrinkDetails';\nimport ProcessFoods from '../Pages/ProcessFoods';\nimport ProcessDrinks from '../Pages/ProcessDrinks';\nimport FoodDetails from '../Pages/FoodDetails';\nimport NotFound from '../Components/NotFound';\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/comidas\" component={ RecipesFoods } />\n        <Route\n          exact\n          path=\"/comidas/:id\"\n          render={ (props) => <FoodDetails { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/bebidas/:id\"\n          render={ (props) => <DrinkDetails { ...props } /> }\n        />\n        <Route exact path=\"/bebidas/\" component={ RecipesDrinks } />\n        <Route exact path=\"/explorar\" component={ Explore } />\n        <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n        <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n        <Route\n          exact\n          path=\"/explorar/comidas/ingredientes\"\n          component={ ExploreFoodsIngridients }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ ExploreDrinksIngredients }\n        />\n        <Route exact path=\"/explorar/comidas/area\" component={ ExploreFoodOrigin } />\n        <Route exact path=\"/perfil\" component={ Profile } />\n        <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\n        <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n        <Route\n          exact\n          path=\"/comidas/:id/in-progress\"\n          component={ ProcessFoods }\n        />\n        <Route\n          exact\n          path=\"/bebidas/:id/in-progress\"\n          component={ ProcessDrinks }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas/area\"\n          component={ NotFound }\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"meals\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './MyContext';\n\nexport default function MyProvider({ children }) {\n  const [recipe, setRecipe] = useState({ meals: [], drinks: [] });\n  const [inProgress, setInProgress] = useState([]);\n  const { ingredients, setIngredients } = useState([]);\n  const { checkedIngredients, setCheckIngredients } = useState([]);\n  const { allChecked, setAllChecked } = useState([]);\n\n  const [food, setFood] = useState([]);\n  const [drink, setDrink] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [recFood, setRecFood] = useState([]);\n  const [recDrink, setRecDrink] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [favoriteRecipes, setFavRecipes] = useState(() => {\n    const favRecipe = localStorage.getItem('favoriteRecipes');\n    return favRecipe ? JSON.parse(favRecipe) : [];\n  });\n  const [recomendations, setRecomendations] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const context = {\n    allChecked,\n    setAllChecked,\n    checkedIngredients,\n    setCheckIngredients,\n    ingredients,\n    setIngredients,\n    recipe,\n    setRecipe,\n    inProgress,\n    setInProgress,\n    recFood,\n    setRecFood,\n    recDrink,\n    setRecDrink,\n    cards,\n    setCards,\n    favoriteRecipes,\n    setFavRecipes,\n    recomendations,\n    setRecomendations,\n    setIsFavorite,\n    isFavorite,\n    food,\n    setFood,\n    drink,\n    setDrink,\n    search,\n    setSearch,\n  };\n\n  return (\n    <MyContext.Provider value={ context }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nMyProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyProvider from './Context/MyProvider';\n\nReactDOM.render(\n  <MyProvider>\n    <App />\n  </MyProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}